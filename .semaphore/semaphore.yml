version: v1.0

name: Main Pipeline

agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:
  - name: "Testing"
    task:
      env_vars:
        - name: ECR_IMAGE_NAME_BASE
          value: 564922552600.dkr.ecr.eu-central-1.amazonaws.com/vovimayhem/ember-fastboot-demo
      secrets:
        - name: AWS
      prologue:
        commands:
          - checkout
          # Log in to AWS ECR:
          - docker-compose --file .semaphore/ci-compose.yml run --rm aws_ecr_login | tr -d '\r' | bash
          # Get the Git branch name safe to use as a docker image tag:
          - export TAG_SAFE_BRANCH=$(echo ${SEMAPHORE_GIT_BRANCH} | tr '/' '-')
      jobs:
        - name: Run Backend Tests
          commands:
            - export IMAGE_TAG=${ECR_IMAGE_NAME_BASE}-backend:testing-${TAG_SAFE_BRANCH}
            # Pull the image to use it as cache:
            - docker pull ${IMAGE_TAG} ; echo "Layer cache ready"
            - docker-compose --file .semaphore/ci-compose.yml run --rm backend_test
            - docker tag backend:testing ${IMAGE_TAG}
            - docker push ${IMAGE_TAG}
        - name: Run Frontend Tests
          commands:
            - export IMAGE_TAG=${ECR_IMAGE_NAME_BASE}-frontend:testing-${TAG_SAFE_BRANCH}
            # Pull the image to use it as cache:
            - docker pull ${IMAGE_TAG} ; echo "Layer cache ready"
            - docker-compose --file .semaphore/ci-compose.yml run --rm frontend_test
            - docker tag frontend:testing ${IMAGE_TAG}
            - docker push ${IMAGE_TAG}
  
  # Releases will always be built:
  - name: Build Release
    task:
      env_vars:
        - name: ECR_IMAGE_NAME_BASE
          value: 564922552600.dkr.ecr.eu-central-1.amazonaws.com/vovimayhem/ember-fastboot-demo
      secrets:
        - name: AWS
      prologue:
        commands:
          - checkout
          # Log in to AWS ECR:
          - docker-compose --file .semaphore/ci-compose.yml run --rm aws_ecr_login | tr -d '\r' | bash
          # Get the Git branch name safe to use as a docker image tag:
          - export TAG_SAFE_BRANCH=$(echo ${SEMAPHORE_GIT_BRANCH} | tr '/' '-')
      jobs:
        - name: Build Backend Image
          commands:
            - export TESTING_IMAGE_TAG=${ECR_IMAGE_NAME_BASE}-backend:testing-${TAG_SAFE_BRANCH}
            - export GIT_SHA_IMAGE_TAG=${ECR_IMAGE_NAME_BASE}-backend:${SEMAPHORE_GIT_SHA:0:7}
            - export BRANCH_IMAGE_TAG=${ECR_IMAGE_NAME_BASE}-backend:${TAG_SAFE_BRANCH}
            - export LATEST_IMAGE_TAG=${ECR_IMAGE_NAME_BASE}-backend:latest

            # Pull the image to use it as cache:
            - docker pull ${TESTING_IMAGE_TAG} ; docker pull ${BRANCH_IMAGE_TAG} ; docker pull ${LATEST_IMAGE_TAG} ; echo "Layer cache ready"
            
            # Build the release image:
            - docker-compose --file .semaphore/ci-compose.yml build backend_release
            
            # Push the BRANCH_NAME tag:
            - docker tag backend:latest ${BRANCH_IMAGE_TAG}
            - docker push ${BRANCH_IMAGE_TAG}

            # Push the SHORT_SHA tag:
            - docker tag backend:latest ${GIT_SHA_IMAGE_TAG}
            - docker push ${GIT_SHA_IMAGE_TAG}

            # Push the "latest" tag:
            - docker tag backend:latest ${LATEST_IMAGE_TAG}
            - docker push ${LATEST_IMAGE_TAG}

        - name: Build Frontend Image
          commands:
            - export TESTING_IMAGE_TAG=${ECR_IMAGE_NAME_BASE}-frontend:testing-${TAG_SAFE_BRANCH}
            - export GIT_SHA_IMAGE_TAG=${ECR_IMAGE_NAME_BASE}-frontend:${SEMAPHORE_GIT_SHA:0:7}
            - export BRANCH_IMAGE_TAG=${ECR_IMAGE_NAME_BASE}-frontend:${TAG_SAFE_BRANCH}
            - export LATEST_IMAGE_TAG=${ECR_IMAGE_NAME_BASE}-frontend:latest
            
            # Pull the image to use it as cache:
            - docker pull ${TESTING_IMAGE_TAG} ; docker pull ${BRANCH_IMAGE_TAG} ; docker pull ${LATEST_IMAGE_TAG} ; echo "Layer cache ready"
            
            # Build the release image:
            - docker-compose --file .semaphore/ci-compose.yml build frontend_release
            
            # Push the BRANCH_NAME tag:
            - docker tag frontend:latest ${BRANCH_IMAGE_TAG}
            - docker push ${BRANCH_IMAGE_TAG}

            # Push the SHORT_SHA tag:
            - docker tag frontend:latest ${GIT_SHA_IMAGE_TAG}
            - docker push ${GIT_SHA_IMAGE_TAG}

            # Push the "latest" tag:
            - docker tag frontend:latest ${LATEST_IMAGE_TAG}
            - docker push ${LATEST_IMAGE_TAG}
  
promotions:
  - name: Production deploy
    pipeline_file: production-deploy.yml
    auto_promote_on:
      - result: passed
        branch:
          - master